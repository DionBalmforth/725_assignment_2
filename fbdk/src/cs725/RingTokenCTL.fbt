<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="RingTokenCTL" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="CAS_STOP" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="CAS_START" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="TokenStatus_Input" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOutput" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOutput" />
      </Event>
      <Event Name="STOP" >
        <With Var="TokenOutput" />
      </Event>
      <Event Name="START" >
        <With Var="TokenOutput" />
      </Event>
      <Event Name="TokenStatus_Output" >
        <With Var="TokenOutput" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="TokenInput" Type="BOOL" />
      <VarDeclaration Name="PExit" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="TokenOutput" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="TOKENLESS" Comment="Doesn't have the token" x="1670.5883" y="800.0" >
        <ECAction Algorithm="TOKEN_FREE" Output="TokenStatus_Output" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="1694.1177" y="200.0" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WAIT" Comment="waiting for token" x="323.52942" y="1717.647" >
        <ECAction Algorithm="STOP" Output="CNF" />
      </ECState>
      <ECState Name="TOKENFUL" x="1770.5883" y="1694.1177" >
        <ECAction Algorithm="TOKEN_IN_USE" Output="TokenStatus_Output" />
      </ECState>
      <ECState Name="CRITICAL_SECTION" Comment="Entering the critical section" x="1582.3529" y="2747.0588" >
        <ECAction Algorithm="START" Output="CNF" />
      </ECState>
      <ECState Name="DONE" Comment="Leaving critical section" x="3223.5293" y="1694.1177" >
      </ECState>
      <ECTransition Source="INIT" Destination="TOKENLESS" Condition="1" x="1670.5883" y="482.35294" />
      <ECTransition Source="TOKENLESS" Destination="WAIT" Condition="REQ&#38;!PE" Comment="tick and photoeye sensor" x="994.1176" y="1205.8823" />
      <ECTransition Source="WAIT" Destination="CRITICAL_SECTION" Condition="TokenStatus_Input&#38;TokenInput" Comment="token status changed nd token availabale" x="941.17645" y="2252.9412" />
      <ECTransition Source="TOKENFUL" Destination="CRITICAL_SECTION" Condition="REQ&#38;!PE" Comment="needs token so go into critical section" x="1647.0588" y="2382.3528" />
      <ECTransition Source="TOKENLESS" Destination="TOKENFUL" Condition="TokenStatus_Input&#38;TokenInput" Comment="receives the token" x="1458.8235" y="1323.5294" />
      <ECTransition Source="TOKENFUL" Destination="TOKENLESS" Condition="REQ&#38;PE" Comment="Token not needed" x="1970.5883" y="1176.4706" />
      <ECTransition Source="CRITICAL_SECTION" Destination="DONE" Condition="REQ&#38;PE" Comment="No longer being sensed by photo eye" x="2658.8235" y="2052.9412" />
      <ECTransition Source="DONE" Destination="TOKENLESS" Condition="REQ&#38;PExit" x="2194.1177" y="1100.0" />
      <ECTransition Source="TOKENLESS" Destination="INIT" Condition="INIT" x="1894.1176" y="400.0" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="TOKEN_IN_USE" >
    <ST Text="TokenOutput := FALSE;&#10;" />
  </Algorithm>
  <Algorithm Name="TOKEN_FREE" >
    <ST Text="TokenOutput := TRUE;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
