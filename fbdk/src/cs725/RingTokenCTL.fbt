<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="RingTokenCTL" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="CAS_STOP" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="CAS_START" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
      <Event Name="TokenStatus_Input" >
        <With Var="TokenInput" />
        <With Var="PExit" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOutput" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="TokenOutput" />
      </Event>
      <Event Name="STOP" >
        <With Var="TokenOutput" />
      </Event>
      <Event Name="START" >
        <With Var="TokenOutput" />
      </Event>
      <Event Name="TokenStatus_Output" >
        <With Var="TokenOutput" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="TokenInput" Type="BOOL" />
      <VarDeclaration Name="PExit" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="TokenOutput" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="TOKENLESS" Comment="Doesn't have the token" x="1766.6666" y="683.3333" >
        <ECAction Algorithm="TOKEN_FREE" Output="TokenStatus_Output" />
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="1694.4443" y="200.0" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WAIT" Comment="waiting for token" x="322.2222" y="1716.6666" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="TOKENFUL" x="1772.2222" y="1694.4443" >
        <ECAction Algorithm="TOKEN_IN_USE" Output="TokenStatus_Output" />
      </ECState>
      <ECState Name="CRITICAL_SECTION" Comment="Entering the critical section" x="1583.3333" y="2744.4443" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DONE" Comment="Leaving critical section" x="3549.9998" y="2188.889" >
      </ECState>
      <ECState Name="DONE_STOP" Comment="If another one comes behind then stop the conveyor" x="4827.778" y="1344.4443" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DONE_EXIT_WAIT" x="3249.9998" y="1294.4443" >
      </ECState>
      <ECState Name="TOKENLESS_CASCSTOP" x="511.11108" y="411.11108" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CRITSEC_CASCSTOP" x="449.99997" y="2888.8887" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DONE_CASCSTOP" x="3561.111" y="2688.8887" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DONE_CASCSTART" x="4727.778" y="2377.7776" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DEW_CASCSTOP" x="3749.9998" y="572.2222" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="DEW_CASCSTART" x="4111.111" y="927.7778" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECTransition Source="INIT" Destination="TOKENLESS" Condition="1" x="1766.6666" y="366.66666" />
      <ECTransition Source="TOKENLESS" Destination="WAIT" Condition="REQ&#38;!PE" Comment="tick and photoeye sensor" x="1088.8888" y="1088.8888" />
      <ECTransition Source="WAIT" Destination="CRITICAL_SECTION" Condition="TokenStatus_Input&#38;TokenInput" Comment="token status changed nd token availabale" x="938.88885" y="2255.5554" />
      <ECTransition Source="TOKENFUL" Destination="CRITICAL_SECTION" Condition="REQ&#38;!PE" Comment="needs token so go into critical section" x="1644.4443" y="2383.3333" />
      <ECTransition Source="TOKENLESS" Destination="TOKENFUL" Condition="TokenStatus_Input&#38;TokenInput" Comment="receives the token" x="1388.8888" y="1266.6666" />
      <ECTransition Source="TOKENFUL" Destination="TOKENLESS" Condition="REQ&#38;PE" Comment="Token not needed" x="1949.9999" y="1427.7777" />
      <ECTransition Source="CRITICAL_SECTION" Destination="DONE" Condition="REQ&#38;PE" Comment="No longer being sensed by photo eye" x="2550.0" y="2294.4443" />
      <ECTransition Source="TOKENLESS" Destination="INIT" Condition="INIT" x="1988.8888" y="422.2222" />
      <ECTransition Source="DONE" Destination="DONE_STOP" Condition="REQ&#38;!PE" x="4211.111" y="1855.5555" />
      <ECTransition Source="DONE" Destination="DONE_EXIT_WAIT" Condition="REQ&#38;!PExit" x="3349.9998" y="1594.4443" />
      <ECTransition Source="DONE_STOP" Destination="DONE_EXIT_WAIT" Condition="REQ&#38;!PExit" x="3999.9998" y="1294.4443" />
      <ECTransition Source="DONE_EXIT_WAIT" Destination="TOKENLESS" Condition="REQ&#38;PExit" x="2205.5554" y="1172.2222" />
      <ECTransition Source="CRITICAL_SECTION" Destination="CRITSEC_CASCSTOP" Condition="CAS_STOP" x="988.88885" y="3233.3333" />
      <ECTransition Source="CRITSEC_CASCSTOP" Destination="CRITICAL_SECTION" Condition="CAS_START" x="616.6666" y="2616.6665" />
      <ECTransition Source="DONE" Destination="DONE_CASCSTOP" Condition="CAS_STOP" x="3561.111" y="2433.3333" />
      <ECTransition Source="DONE_CASCSTOP" Destination="DONE" Condition="1" x="3116.6665" y="2494.4443" />
      <ECTransition Source="DONE" Destination="DONE_CASCSTART" Condition="CAS_START" x="4200.0" y="2188.889" />
      <ECTransition Source="DONE_CASCSTART" Destination="DONE" Condition="1" x="3999.9998" y="2377.7776" />
      <ECTransition Source="DONE_EXIT_WAIT" Destination="DEW_CASCSTOP" Condition="CAS_STOP" x="3249.9998" y="838.88885" />
      <ECTransition Source="DEW_CASCSTOP" Destination="DONE_EXIT_WAIT" Condition="1" x="3433.3333" y="938.88885" />
      <ECTransition Source="DONE_EXIT_WAIT" Destination="DEW_CASCSTART" Condition="CAS_START" x="3605.5554" y="1055.5555" />
      <ECTransition Source="DEW_CASCSTART" Destination="DONE_EXIT_WAIT" Condition="1" x="3811.111" y="1172.2222" />
      <ECTransition Source="TOKENLESS" Destination="TOKENLESS_CASCSTOP" Condition="CAS_STOP" x="722.22217" y="794.4444" />
      <ECTransition Source="TOKENLESS_CASCSTOP" Destination="TOKENLESS" Condition="CAS_START" x="1150.0" y="144.44444" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="TOKEN_IN_USE" >
    <ST Text="TokenOutput := FALSE;&#10;" />
  </Algorithm>
  <Algorithm Name="TOKEN_FREE" >
    <ST Text="TokenOutput := TRUE;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
